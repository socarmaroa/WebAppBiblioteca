// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppBiblioteca.Models;

namespace WebAppBiblioteca.Migrations
{
    [DbContext(typeof(WebAppBibliotecaContext))]
    [Migration("20180816024318_Usuarios")]
    partial class Usuarios
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAppBiblioteca.Models.General", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.Property<int>("TipoGeneralId");

                    b.HasKey("Id");

                    b.HasIndex("TipoGeneralId");

                    b.ToTable("General");
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId");

                    b.Property<int>("DiasPrestamo");

                    b.Property<string>("Editorial")
                        .IsRequired();

                    b.Property<int>("TipoLibroId");

                    b.Property<string>("Titulo")
                        .IsRequired();

                    b.Property<int>("UbicacionId");

                    b.Property<string>("Year")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroId");

                    b.Property<string>("Identificacion");

                    b.Property<string>("Papellido");

                    b.Property<string>("Pnombre");

                    b.Property<string>("Sapellido");

                    b.Property<string>("Snombre");

                    b.Property<int>("TipoIdentificacionId");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("TipoIdentificacionId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("FechaEntrega");

                    b.Property<DateTime>("FechaPrestamo");

                    b.Property<int>("LibroId");

                    b.HasKey("Id");

                    b.ToTable("Prestamo");
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.TipoGeneral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion");

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("TipoGeneral");
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstadoUsuarioId");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PersonaId");

                    b.HasKey("Id");

                    b.HasIndex("EstadoUsuarioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.General", b =>
                {
                    b.HasOne("WebAppBiblioteca.Models.TipoGeneral", "TipoGeneral")
                        .WithMany("datosGenerales")
                        .HasForeignKey("TipoGeneralId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.Persona", b =>
                {
                    b.HasOne("WebAppBiblioteca.Models.General", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAppBiblioteca.Models.General", "TipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAppBiblioteca.Models.Usuario", b =>
                {
                    b.HasOne("WebAppBiblioteca.Models.General", "EstadoUsuario")
                        .WithMany()
                        .HasForeignKey("EstadoUsuarioId");

                    b.HasOne("WebAppBiblioteca.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });
#pragma warning restore 612, 618
        }
    }
}
